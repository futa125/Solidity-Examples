{
	"id": "289daf84469023cb8eb50881a63fb377",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\ncontract Tokens {\r\n    struct Token {\r\n        uint cost;\r\n    }\r\n\r\n    mapping(address => Token[]) balances;\r\n    address payable wallet;\r\n\r\n    constructor(address payable _wallet) {\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function buyToken() public payable {\r\n        balances[msg.sender].push(\r\n            Token(msg.value)\r\n        );\r\n        wallet.transfer(msg.value);\r\n    }\r\n\r\n    function sellToken() public payable {\r\n        Token memory token = balances[msg.sender][balances[msg.sender].length - 1];\r\n        delete balances[msg.sender][balances[msg.sender].length - 1];\r\n        payable(msg.sender).transfer(token.cost);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens.sol": {
				"Tokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_wallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens.sol\":63:709  contract Tokens {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens.sol\":209:281  constructor(address payable _wallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokens.sol\":266:273  _wallet */\n  dup1\n    /* \"contracts/tokens.sol\":257:263  wallet */\n  0x01\n  0x00\n    /* \"contracts/tokens.sol\":257:273  wallet = _wallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens.sol\":209:281  constructor(address payable _wallet) {\r... */\n  pop\n    /* \"contracts/tokens.sol\":63:709  contract Tokens {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:166   */\ntag_8:\n    /* \"#utility.yul\":72:77   */\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_10\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:539   */\ntag_3:\n    /* \"#utility.yul\":250:256   */\n  0x00\n    /* \"#utility.yul\":299:301   */\n  0x20\n    /* \"#utility.yul\":287:296   */\n  dup3\n    /* \"#utility.yul\":278:285   */\n  dup5\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:386   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":305:384   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":267:386   */\ntag_13:\n    /* \"#utility.yul\":425:426   */\n  0x00\n    /* \"#utility.yul\":450:522   */\n  tag_16\n    /* \"#utility.yul\":514:521   */\n  dup5\n    /* \"#utility.yul\":505:511   */\n  dup3\n    /* \"#utility.yul\":494:503   */\n  dup6\n    /* \"#utility.yul\":490:512   */\n  add\n    /* \"#utility.yul\":450:522   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":440:522   */\n  swap2\n  pop\n    /* \"#utility.yul\":396:532   */\n  pop\n    /* \"#utility.yul\":172:539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":626:730   */\ntag_19:\n    /* \"#utility.yul\":671:678   */\n  0x00\n    /* \"#utility.yul\":700:724   */\n  tag_21\n    /* \"#utility.yul\":718:723   */\n  dup3\n    /* \"#utility.yul\":700:724   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":689:724   */\n  swap1\n  pop\n    /* \"#utility.yul\":626:730   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":736:862   */\ntag_22:\n    /* \"#utility.yul\":773:780   */\n  0x00\n    /* \"#utility.yul\":813:855   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":806:811   */\n  dup3\n    /* \"#utility.yul\":802:856   */\n  and\n    /* \"#utility.yul\":791:856   */\n  swap1\n  pop\n    /* \"#utility.yul\":736:862   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1108   */\ntag_15:\n    /* \"#utility.yul\":1100:1101   */\n  0x00\n    /* \"#utility.yul\":1097:1098   */\n  dup1\n    /* \"#utility.yul\":1090:1102   */\n  revert\n    /* \"#utility.yul\":1114:1252   */\ntag_11:\n    /* \"#utility.yul\":1195:1227   */\n  tag_28\n    /* \"#utility.yul\":1221:1226   */\n  dup2\n    /* \"#utility.yul\":1195:1227   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1188:1193   */\n  dup2\n    /* \"#utility.yul\":1185:1228   */\n  eq\n    /* \"#utility.yul\":1175:1246   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1239:1240   */\n  dup1\n    /* \"#utility.yul\":1232:1244   */\n  revert\n    /* \"#utility.yul\":1175:1246   */\ntag_29:\n    /* \"#utility.yul\":1114:1252   */\n  pop\n  jump\t// out\n    /* \"contracts/tokens.sol\":63:709  contract Tokens {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens.sol\":63:709  contract Tokens {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9769f0b0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa4821719\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokens.sol\":455:706  function sellToken() public payable {\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/tokens.sol\":289:447  function buyToken() public payable {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/tokens.sol\":455:706  function sellToken() public payable {\r... */\n    tag_5:\n        /* \"contracts/tokens.sol\":502:520  Token memory token */\n      0x00\n        /* \"contracts/tokens.sol\":523:531  balances */\n      dup1\n        /* \"contracts/tokens.sol\":523:543  balances[msg.sender] */\n      0x00\n        /* \"contracts/tokens.sol\":532:542  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":523:543  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":574:575  1 */\n      0x01\n        /* \"contracts/tokens.sol\":544:552  balances */\n      0x00\n        /* \"contracts/tokens.sol\":544:564  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":553:563  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":544:564  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":544:571  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":544:575  balances[msg.sender].length - 1 */\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"contracts/tokens.sol\":523:576  balances[msg.sender][balances[msg.sender].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_11\n      jumpi\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n    tag_11:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/tokens.sol\":502:576  Token memory token = balances[msg.sender][balances[msg.sender].length - 1] */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":594:602  balances */\n      0x00\n        /* \"contracts/tokens.sol\":594:614  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":603:613  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":594:614  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":645:646  1 */\n      0x01\n        /* \"contracts/tokens.sol\":615:623  balances */\n      0x00\n        /* \"contracts/tokens.sol\":615:635  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":624:634  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":615:635  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":615:642  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":615:646  balances[msg.sender].length - 1 */\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n        /* \"contracts/tokens.sol\":594:647  balances[msg.sender][balances[msg.sender].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_16\n      jumpi\n      tag_17\n      tag_13\n      jump\t// in\n    tag_17:\n    tag_16:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/tokens.sol\":587:647  delete balances[msg.sender][balances[msg.sender].length - 1] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":658:686  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":658:698  payable(msg.sender).transfer(token.cost) */\n      0x08fc\n        /* \"contracts/tokens.sol\":687:692  token */\n      dup3\n        /* \"contracts/tokens.sol\":687:697  token.cost */\n      0x00\n      add\n      mload\n        /* \"contracts/tokens.sol\":658:698  payable(msg.sender).transfer(token.cost) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n        /* \"contracts/tokens.sol\":491:706  {\r... */\n      pop\n        /* \"contracts/tokens.sol\":455:706  function sellToken() public payable {\r... */\n      jump\t// out\n        /* \"contracts/tokens.sol\":289:447  function buyToken() public payable {\r... */\n    tag_7:\n        /* \"contracts/tokens.sol\":335:343  balances */\n      0x00\n        /* \"contracts/tokens.sol\":335:355  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":344:354  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":335:355  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":375:391  Token(msg.value) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/tokens.sol\":381:390  msg.value */\n      callvalue\n        /* \"contracts/tokens.sol\":375:391  Token(msg.value) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/tokens.sol\":335:402  balances[msg.sender].push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens.sol\":413:419  wallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":413:428  wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":413:439  wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/tokens.sol\":429:438  msg.value */\n      callvalue\n        /* \"contracts/tokens.sol\":413:439  wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n        /* \"contracts/tokens.sol\":289:447  function buyToken() public payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:198   */\n    tag_10:\n        /* \"#utility.yul\":47:51   */\n      0x00\n        /* \"#utility.yul\":67:87   */\n      tag_27\n        /* \"#utility.yul\":85:86   */\n      dup3\n        /* \"#utility.yul\":67:87   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":62:87   */\n      swap2\n      pop\n        /* \"#utility.yul\":101:121   */\n      tag_29\n        /* \"#utility.yul\":119:120   */\n      dup4\n        /* \"#utility.yul\":101:121   */\n      tag_28\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":96:121   */\n      swap3\n      pop\n        /* \"#utility.yul\":140:141   */\n      dup3\n        /* \"#utility.yul\":137:138   */\n      dup3\n        /* \"#utility.yul\":134:142   */\n      lt\n        /* \"#utility.yul\":131:165   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":145:163   */\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":131:165   */\n    tag_30:\n        /* \"#utility.yul\":190:191   */\n      dup3\n        /* \"#utility.yul\":187:188   */\n      dup3\n        /* \"#utility.yul\":183:192   */\n      sub\n        /* \"#utility.yul\":175:192   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":204:281   */\n    tag_28:\n        /* \"#utility.yul\":241:248   */\n      0x00\n        /* \"#utility.yul\":270:275   */\n      dup2\n        /* \"#utility.yul\":259:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":204:281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:467   */\n    tag_32:\n        /* \"#utility.yul\":335:412   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":332:333   */\n      0x00\n        /* \"#utility.yul\":325:413   */\n      mstore\n        /* \"#utility.yul\":432:436   */\n      0x11\n        /* \"#utility.yul\":429:430   */\n      0x04\n        /* \"#utility.yul\":422:437   */\n      mstore\n        /* \"#utility.yul\":456:460   */\n      0x24\n        /* \"#utility.yul\":453:454   */\n      0x00\n        /* \"#utility.yul\":446:461   */\n      revert\n        /* \"#utility.yul\":473:653   */\n    tag_13:\n        /* \"#utility.yul\":521:598   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":518:519   */\n      0x00\n        /* \"#utility.yul\":511:599   */\n      mstore\n        /* \"#utility.yul\":618:622   */\n      0x32\n        /* \"#utility.yul\":615:616   */\n      0x04\n        /* \"#utility.yul\":608:623   */\n      mstore\n        /* \"#utility.yul\":642:646   */\n      0x24\n        /* \"#utility.yul\":639:640   */\n      0x00\n        /* \"#utility.yul\":632:647   */\n      revert\n\n    auxdata: 0xa2646970667358221220ae082ca63eee1bc27855dc30fe7d4b2e65f53079cdea1bcf1b64966c0bee3b7864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1255:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "7:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "305:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:1"
															},
															"nodeType": "YulIf",
															"src": "267:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "396:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "411:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "415:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "440:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "494:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "505:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "450:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "440:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "172:367:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "595:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "578:6:1",
														"type": ""
													}
												],
												"src": "545:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "679:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "689:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "718:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "700:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "689:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "661:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"src": "626:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "781:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "791:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "806:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "791:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "763:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "773:7:1",
														"type": ""
													}
												],
												"src": "736:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "957:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "967:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "868:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "991:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1230:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1242:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1188:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1221:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1195:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1195:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1185:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:51:1"
															},
															"nodeType": "YulIf",
															"src": "1175:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1158:5:1",
														"type": ""
													}
												],
												"src": "1114:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104d53803806104d58339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b6103bd806101186000396000f3fe6080604052600436106100295760003560e01c80639769f0b01461002e578063a482171914610038575b600080fd5b610036610042565b005b610040610202565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506100d091906102eb565b815481106100e1576100e0610358565b5b9060005260206000200160405180602001604052908160008201548152505090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061018e91906102eb565b8154811061019f5761019e610358565b5b9060005260206000200160008082016000905550503373ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f193505050501580156101fe573d6000803e3d6000fd5b5050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052803481525090806001815401808255809150506001900390600052602060002001600090919091909150600082015181600001555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102e8573d6000803e3d6000fd5b50565b60006102f68261031f565b91506103018361031f565b92508282101561031457610313610329565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ae082ca63eee1bc27855dc30fe7d4b2e65f53079cdea1bcf1b64966c0bee3b7864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4D5 CODESIZE SUB DUP1 PUSH2 0x4D5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88 DUP2 PUSH2 0xF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4 JUMPI PUSH2 0xA3 PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP5 DUP3 DUP6 ADD PUSH2 0x79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6 DUP3 PUSH2 0xCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB DUP2 PUSH2 0xBB JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3BD DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x42 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40 PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE1 JUMPI PUSH2 0xE0 PUSH2 0x358 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19F JUMPI PUSH2 0x19E PUSH2 0x358 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x301 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x314 JUMPI PUSH2 0x313 PUSH2 0x329 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE ADDMOD 0x2C 0xA6 RETURNDATACOPY 0xEE SHL 0xC2 PUSH25 0x55DC30FE7D4B2E65F53079CDEA1BCF1B64966C0BEE3B786473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "63:646:0:-:0;;;209:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;266:7;257:6;;:16;;;;;;;;;;;;;;;;;;209:72;63:646;;7:159:1;72:5;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;7:159;;;;:::o;172:367::-;250:6;299:2;287:9;278:7;274:23;270:32;267:119;;;305:79;;:::i;:::-;267:119;425:1;450:72;514:7;505:6;494:9;490:22;450:72;:::i;:::-;440:82;;396:136;172:367;;;;:::o;626:104::-;671:7;700:24;718:5;700:24;:::i;:::-;689:35;;626:104;;;:::o;736:126::-;773:7;813:42;806:5;802:54;791:65;;736:126;;;:::o;991:117::-;1100:1;1097;1090:12;1114:138;1195:32;1221:5;1195:32;:::i;:::-;1188:5;1185:43;1175:71;;1242:1;1239;1232:12;1175:71;1114:138;:::o;63:646:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyToken_44": {
									"entryPoint": 514,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellToken_88": {
									"entryPoint": 66,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_sub_t_uint256": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:656:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "85:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "67:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "62:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "96:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "119:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "101:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "101:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "96:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "143:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "145:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "145:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "145:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "137:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "140:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "134:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "134:8:1"
															},
															"nodeType": "YulIf",
															"src": "131:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "175:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "187:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "190:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "175:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "41:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "47:4:1",
														"type": ""
													}
												],
												"src": "7:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "249:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "259:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "270:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "259:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "231:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"src": "204:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "315:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "332:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "335:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "325:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "325:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "429:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "432:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "422:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "422:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "453:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "456:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "446:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "287:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "521:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "511:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "615:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "618:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "608:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "639:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "642:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "632:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "473:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80639769f0b01461002e578063a482171914610038575b600080fd5b610036610042565b005b610040610202565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506100d091906102eb565b815481106100e1576100e0610358565b5b9060005260206000200160405180602001604052908160008201548152505090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061018e91906102eb565b8154811061019f5761019e610358565b5b9060005260206000200160008082016000905550503373ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f193505050501580156101fe573d6000803e3d6000fd5b5050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052803481525090806001815401808255809150506001900390600052602060002001600090919091909150600082015181600001555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102e8573d6000803e3d6000fd5b50565b60006102f68261031f565b91506103018361031f565b92508282101561031457610313610329565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ae082ca63eee1bc27855dc30fe7d4b2e65f53079cdea1bcf1b64966c0bee3b7864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x42 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40 PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE1 JUMPI PUSH2 0xE0 PUSH2 0x358 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19F JUMPI PUSH2 0x19E PUSH2 0x358 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x301 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x314 JUMPI PUSH2 0x313 PUSH2 0x329 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE ADDMOD 0x2C 0xA6 RETURNDATACOPY 0xEE SHL 0xC2 PUSH25 0x55DC30FE7D4B2E65F53079CDEA1BCF1B64966C0BEE3B786473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "63:646:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;455:251;;;:::i;:::-;;289:158;;;:::i;:::-;;455:251;502:18;523:8;:20;532:10;523:20;;;;;;;;;;;;;;;574:1;544:8;:20;553:10;544:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;523:53;;;;;;;;:::i;:::-;;;;;;;;;502:74;;;;;;;;;;;;;;;;;;;594:8;:20;603:10;594:20;;;;;;;;;;;;;;;645:1;615:8;:20;624:10;615:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;594:53;;;;;;;;:::i;:::-;;;;;;;;;;587:60;;;;;;;;666:10;658:28;;:40;687:5;:10;;;658:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:215;455:251::o;289:158::-;335:8;:20;344:10;335:20;;;;;;;;;;;;;;;375:16;;;;;;;;381:9;375:16;;;335:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;413:6;;;;;;;;;;;:15;;:26;429:9;413:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:158::o;7:191:1:-;47:4;67:20;85:1;67:20;:::i;:::-;62:25;;101:20;119:1;101:20;:::i;:::-;96:25;;140:1;137;134:8;131:34;;;145:18;;:::i;:::-;131:34;190:1;187;183:9;175:17;;7:191;;;;:::o;204:77::-;241:7;270:5;259:16;;204:77;;;:::o;287:180::-;335:77;332:1;325:88;432:4;429:1;422:15;456:4;453:1;446:15;473:180;521:77;518:1;511:88;618:4;615:1;608:15;642:4;639:1;632:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "191400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyToken()": "infinite",
								"sellToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 266,
									"end": 273,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 77,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 425,
									"end": 426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 521,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 505,
									"end": 511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 494,
									"end": 503,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 490,
									"end": 512,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 671,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 773,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 802,
									"end": 856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1101,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1221,
									"end": 1226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1228,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1244,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 709,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae082ca63eee1bc27855dc30fe7d4b2e65f53079cdea1bcf1b64966c0bee3b7864736f6c63430008070033",
									".code": [
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "9769F0B0"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "A4821719"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 706,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 455,
											"end": 706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 455,
											"end": 706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 706,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 706,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 706,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 455,
											"end": 706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 574,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 544,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 563,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 544,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 523,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 613,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 645,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 634,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 615,
											"end": 646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 615,
											"end": 646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 615,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 587,
											"end": 647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 647,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 587,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 658,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 658,
											"end": 686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 687,
											"end": 692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 687,
											"end": 697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 706,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 354,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 390,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 413,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 429,
											"end": 438,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 198,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 87,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 85,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 67,
											"end": 87,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 67,
											"end": 87,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 67,
											"end": 87,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 67,
											"end": 87,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 62,
											"end": 87,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 87,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 101,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 119,
											"end": 120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 101,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 101,
											"end": 121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 101,
											"end": 121,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 101,
											"end": 121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 96,
											"end": 121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 140,
											"end": 141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 137,
											"end": 138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 134,
											"end": 142,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 131,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 131,
											"end": 165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 145,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 145,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 145,
											"end": 163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 145,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 165,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 131,
											"end": 165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 190,
											"end": 191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 187,
											"end": 188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 183,
											"end": 192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 175,
											"end": 192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 175,
											"end": 192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 198,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 204,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 204,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 259,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 259,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 204,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 467,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 287,
											"end": 467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 412,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 432,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 461,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 473,
											"end": 653,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 622,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 608,
											"end": 623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 647,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyToken()": "a4821719",
							"sellToken()": "9769f0b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens.sol\":\"Tokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens.sol\":{\"keccak256\":\"0x858815d8048597d164fe25fbfb24d58c4800ef8f0409465aa76776aff704ffad\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e2c9f367b0fc377d7fc116aa12b0a694fced4e3e79cda95542a77ecec71c74a\",\"dweb:/ipfs/QmTsyiqEAnrbxGvPoEosiKvXfphWWDEupVPuYGvbFiBtXA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/tokens.sol": {
				"ast": {
					"absolutePath": "contracts/tokens.sol",
					"exportedSymbols": {
						"Tokens": [
							89
						]
					},
					"id": 90,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "Tokens",
							"nameLocation": "72:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Tokens.Token",
									"id": 4,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "cost",
											"nameLocation": "115:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 4,
											"src": "110:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "110:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "93:5:0",
									"nodeType": "StructDefinition",
									"scope": 89,
									"src": "86:41:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "163:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 89,
									"src": "135:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct Tokens.Token[])"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "143:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "135:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct Tokens.Token[])"
										},
										"valueType": {
											"baseType": {
												"id": 7,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 6,
													"name": "Token",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 4,
													"src": "154:5:0"
												},
												"referencedDeclaration": 4,
												"src": "154:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Token_$4_storage_ptr",
													"typeString": "struct Tokens.Token"
												}
											},
											"id": 8,
											"nodeType": "ArrayTypeName",
											"src": "154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr",
												"typeString": "struct Tokens.Token[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "wallet",
									"nameLocation": "194:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 89,
									"src": "178:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "178:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "246:35:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "257:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "257:16:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "237:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "221:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:25:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:0"
									},
									"scope": 89,
									"src": "209:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "324:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 31,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "381:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "381:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 30,
																"name": "Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Token_$4_storage_ptr_$",
																	"typeString": "type(struct Tokens.Token storage pointer)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "375:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																"typeString": "struct Tokens.Token memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																"typeString": "struct Tokens.Token memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 25,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "335:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 28,
															"indexExpression": {
																"expression": {
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "335:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr_$_t_struct$_Token_$4_storage_$returns$__$bound_to$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Tokens.Token storage ref[] storage pointer,struct Tokens.Token storage ref)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "335:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "335:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 39,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "429:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "429:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 36,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "413:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "413:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "413:26:0"
											}
										]
									},
									"functionSelector": "a4821719",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "298:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 89,
									"src": "289:158:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "491:215:0",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "515:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "502:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
															"typeString": "struct Tokens.Token"
														},
														"typeName": {
															"id": 48,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 47,
																"name": "Token",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4,
																"src": "502:5:0"
															},
															"referencedDeclaration": 4,
															"src": "502:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$4_storage_ptr",
																"typeString": "struct Tokens.Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 50,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "523:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
															}
														},
														"id": 53,
														"indexExpression": {
															"expression": {
																"id": 51,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "532:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "532:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "523:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
															"typeString": "struct Tokens.Token storage ref[] storage ref"
														}
													},
													"id": 61,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 54,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "544:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																	}
																},
																"id": 57,
																"indexExpression": {
																	"expression": {
																		"id": 55,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "553:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "553:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "544:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																	"typeString": "struct Tokens.Token storage ref[] storage ref"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "544:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "574:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "544:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "523:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Token_$4_storage",
														"typeString": "struct Tokens.Token storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "502:74:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "587:60:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 63,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "594:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 66,
															"indexExpression": {
																"expression": {
																	"id": 64,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "603:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "603:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "594:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 74,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 67,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "615:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																		}
																	},
																	"id": 70,
																	"indexExpression": {
																		"expression": {
																			"id": 68,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "624:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "624:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "615:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																		"typeString": "struct Tokens.Token storage ref[] storage ref"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "615:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "615:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "594:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$4_storage",
															"typeString": "struct Tokens.Token storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "587:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 83,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "687:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																	"typeString": "struct Tokens.Token memory"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "cost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "687:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 79,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "666:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "666:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "658:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 77,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "658:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "658:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "658:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "658:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "658:40:0"
											}
										]
									},
									"functionSelector": "9769f0b0",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellToken",
									"nameLocation": "464:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:0:0"
									},
									"scope": 89,
									"src": "455:251:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 90,
							"src": "63:646:0",
							"usedErrors": []
						}
					],
					"src": "37:672:0"
				},
				"id": 0
			}
		}
	}
}