{
	"id": "52a371c2c90717489e2c9e4a20be19c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\ncontract Tokens {\r\n    mapping(address => uint) balances;\r\n    address payable wallet;\r\n\r\n    constructor(address payable _wallet) {\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function buyToken() public payable {\r\n        balances[msg.sender] += 1;\r\n        wallet.transfer(msg.value);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens.sol": {
				"Tokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_wallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens.sol\":63:356  contract Tokens {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens.sol\":157:229  constructor(address payable _wallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokens.sol\":214:221  _wallet */\n  dup1\n    /* \"contracts/tokens.sol\":205:211  wallet */\n  0x01\n  0x00\n    /* \"contracts/tokens.sol\":205:221  wallet = _wallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens.sol\":157:229  constructor(address payable _wallet) {\r... */\n  pop\n    /* \"contracts/tokens.sol\":63:356  contract Tokens {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:166   */\ntag_8:\n    /* \"#utility.yul\":72:77   */\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_10\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:539   */\ntag_3:\n    /* \"#utility.yul\":250:256   */\n  0x00\n    /* \"#utility.yul\":299:301   */\n  0x20\n    /* \"#utility.yul\":287:296   */\n  dup3\n    /* \"#utility.yul\":278:285   */\n  dup5\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:386   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":305:384   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":267:386   */\ntag_13:\n    /* \"#utility.yul\":425:426   */\n  0x00\n    /* \"#utility.yul\":450:522   */\n  tag_16\n    /* \"#utility.yul\":514:521   */\n  dup5\n    /* \"#utility.yul\":505:511   */\n  dup3\n    /* \"#utility.yul\":494:503   */\n  dup6\n    /* \"#utility.yul\":490:512   */\n  add\n    /* \"#utility.yul\":450:522   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":440:522   */\n  swap2\n  pop\n    /* \"#utility.yul\":396:532   */\n  pop\n    /* \"#utility.yul\":172:539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":626:730   */\ntag_19:\n    /* \"#utility.yul\":671:678   */\n  0x00\n    /* \"#utility.yul\":700:724   */\n  tag_21\n    /* \"#utility.yul\":718:723   */\n  dup3\n    /* \"#utility.yul\":700:724   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":689:724   */\n  swap1\n  pop\n    /* \"#utility.yul\":626:730   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":736:862   */\ntag_22:\n    /* \"#utility.yul\":773:780   */\n  0x00\n    /* \"#utility.yul\":813:855   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":806:811   */\n  dup3\n    /* \"#utility.yul\":802:856   */\n  and\n    /* \"#utility.yul\":791:856   */\n  swap1\n  pop\n    /* \"#utility.yul\":736:862   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1108   */\ntag_15:\n    /* \"#utility.yul\":1100:1101   */\n  0x00\n    /* \"#utility.yul\":1097:1098   */\n  dup1\n    /* \"#utility.yul\":1090:1102   */\n  revert\n    /* \"#utility.yul\":1114:1252   */\ntag_11:\n    /* \"#utility.yul\":1195:1227   */\n  tag_28\n    /* \"#utility.yul\":1221:1226   */\n  dup2\n    /* \"#utility.yul\":1195:1227   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1188:1193   */\n  dup2\n    /* \"#utility.yul\":1185:1228   */\n  eq\n    /* \"#utility.yul\":1175:1246   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1239:1240   */\n  dup1\n    /* \"#utility.yul\":1232:1244   */\n  revert\n    /* \"#utility.yul\":1175:1246   */\ntag_29:\n    /* \"#utility.yul\":1114:1252   */\n  pop\n  jump\t// out\n    /* \"contracts/tokens.sol\":63:356  contract Tokens {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens.sol\":63:356  contract Tokens {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa4821719\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokens.sol\":237:353  function buyToken() public payable {\r... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"contracts/tokens.sol\":307:308  1 */\n      0x01\n        /* \"contracts/tokens.sol\":283:291  balances */\n      0x00\n        /* \"contracts/tokens.sol\":283:303  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":292:302  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":283:303  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokens.sol\":283:308  balances[msg.sender] += 1 */\n      dup3\n      dup3\n      sload\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens.sol\":319:325  wallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":319:334  wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":319:345  wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/tokens.sol\":335:344  msg.value */\n      callvalue\n        /* \"contracts/tokens.sol\":319:345  wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_9:\n      pop\n        /* \"contracts/tokens.sol\":237:353  function buyToken() public payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:312   */\n    tag_7:\n        /* \"#utility.yul\":47:50   */\n      0x00\n        /* \"#utility.yul\":66:86   */\n      tag_12\n        /* \"#utility.yul\":84:85   */\n      dup3\n        /* \"#utility.yul\":66:86   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":61:86   */\n      swap2\n      pop\n        /* \"#utility.yul\":100:120   */\n      tag_14\n        /* \"#utility.yul\":118:119   */\n      dup4\n        /* \"#utility.yul\":100:120   */\n      tag_13\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":95:120   */\n      swap3\n      pop\n        /* \"#utility.yul\":254:255   */\n      dup3\n        /* \"#utility.yul\":186:252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":182:256   */\n      sub\n        /* \"#utility.yul\":179:180   */\n      dup3\n        /* \"#utility.yul\":176:257   */\n      gt\n        /* \"#utility.yul\":173:280   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":260:278   */\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":173:280   */\n    tag_15:\n        /* \"#utility.yul\":304:305   */\n      dup3\n        /* \"#utility.yul\":301:302   */\n      dup3\n        /* \"#utility.yul\":297:306   */\n      add\n        /* \"#utility.yul\":290:306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:395   */\n    tag_13:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":318:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":401:581   */\n    tag_17:\n        /* \"#utility.yul\":449:526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":439:527   */\n      mstore\n        /* \"#utility.yul\":546:550   */\n      0x11\n        /* \"#utility.yul\":543:544   */\n      0x04\n        /* \"#utility.yul\":536:551   */\n      mstore\n        /* \"#utility.yul\":570:574   */\n      0x24\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":560:575   */\n      revert\n\n    auxdata: 0xa26469706673582212201e0a2125de31b30bec647725a2ccaf3375baf442def5ecbb3f8d4bf10456d9c364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1255:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "7:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "305:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:1"
															},
															"nodeType": "YulIf",
															"src": "267:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "396:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "411:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "415:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "440:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "494:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "505:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "450:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "440:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "172:367:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "595:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "578:6:1",
														"type": ""
													}
												],
												"src": "545:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "679:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "689:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "718:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "700:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "689:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "661:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"src": "626:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "781:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "791:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "806:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "791:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "763:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "773:7:1",
														"type": ""
													}
												],
												"src": "736:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "957:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "967:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "868:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "991:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1230:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1242:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1188:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1221:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1195:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1195:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1185:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:51:1"
															},
															"nodeType": "YulIf",
															"src": "1175:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1158:5:1",
														"type": ""
													}
												],
												"src": "1114:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102cb3803806102cb8339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b6101b3806101186000396000f3fe60806040526004361061001e5760003560e01c8063a482171914610023575b600080fd5b61002b61002d565b005b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461007c91906100ee565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100eb573d6000803e3d6000fd5b50565b60006100f982610144565b915061010483610144565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101395761013861014e565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201e0a2125de31b30bec647725a2ccaf3375baf442def5ecbb3f8d4bf10456d9c364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2CB CODESIZE SUB DUP1 PUSH2 0x2CB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88 DUP2 PUSH2 0xF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4 JUMPI PUSH2 0xA3 PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP5 DUP3 DUP6 ADD PUSH2 0x79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6 DUP3 PUSH2 0xCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB DUP2 PUSH2 0xBB JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B3 DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4821719 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9 DUP3 PUSH2 0x144 JUMP JUMPDEST SWAP2 POP PUSH2 0x104 DUP4 PUSH2 0x144 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0x14E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E EXP 0x21 0x25 0xDE BALANCE 0xB3 SIGNEXTEND 0xEC PUSH5 0x7725A2CCAF CALLER PUSH22 0xBAF442DEF5ECBB3F8D4BF10456D9C364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "63:293:0:-:0;;;157:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;214:7;205:6;;:16;;;;;;;;;;;;;;;;;;157:72;63:293;;7:159:1;72:5;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;7:159;;;;:::o;172:367::-;250:6;299:2;287:9;278:7;274:23;270:32;267:119;;;305:79;;:::i;:::-;267:119;425:1;450:72;514:7;505:6;494:9;490:22;450:72;:::i;:::-;440:82;;396:136;172:367;;;;:::o;626:104::-;671:7;700:24;718:5;700:24;:::i;:::-;689:35;;626:104;;;:::o;736:126::-;773:7;813:42;806:5;802:54;791:65;;736:126;;;:::o;991:117::-;1100:1;1097;1090:12;1114:138;1195:32;1221:5;1195:32;:::i;:::-;1188:5;1185:43;1175:71;;1242:1;1239;1232:12;1175:71;1114:138;:::o;63:293:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyToken_35": {
									"entryPoint": 45,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:584:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "84:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "66:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "66:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "61:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "95:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "118:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "100:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "95:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "260:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "179:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "186:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "254:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "182:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:81:1"
															},
															"nodeType": "YulIf",
															"src": "173:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "301:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "304:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "41:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "47:3:1",
														"type": ""
													}
												],
												"src": "7:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "318:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "429:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "439:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "546:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "536:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "401:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063a482171914610023575b600080fd5b61002b61002d565b005b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461007c91906100ee565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100eb573d6000803e3d6000fd5b50565b60006100f982610144565b915061010483610144565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101395761013861014e565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201e0a2125de31b30bec647725a2ccaf3375baf442def5ecbb3f8d4bf10456d9c364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4821719 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9 DUP3 PUSH2 0x144 JUMP JUMPDEST SWAP2 POP PUSH2 0x104 DUP4 PUSH2 0x144 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0x14E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E EXP 0x21 0x25 0xDE BALANCE 0xB3 SIGNEXTEND 0xEC PUSH5 0x7725A2CCAF CALLER PUSH22 0xBAF442DEF5ECBB3F8D4BF10456D9C364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "63:293:0:-:0;;;;;;;;;;;;;;;;;;;;;237:116;;;:::i;:::-;;;307:1;283:8;:20;292:10;283:20;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;319:6;;;;;;;;;;;:15;;:26;335:9;319:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:116::o;7:305:1:-;47:3;66:20;84:1;66:20;:::i;:::-;61:25;;100:20;118:1;100:20;:::i;:::-;95:25;;254:1;186:66;182:74;179:1;176:81;173:107;;;260:18;;:::i;:::-;173:107;304:1;301;297:9;290:16;;7:305;;;;:::o;318:77::-;355:7;384:5;373:16;;318:77;;;:::o;401:180::-;449:77;446:1;439:88;546:4;543:1;536:15;570:4;567:1;560:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 157,
									"end": 229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 214,
									"end": 221,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 205,
									"end": 211,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 211,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 221,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 205,
									"end": 221,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 205,
									"end": 221,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 205,
									"end": 221,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 205,
									"end": 221,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 229,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 77,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 425,
									"end": 426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 521,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 505,
									"end": 511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 494,
									"end": 503,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 490,
									"end": 512,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 671,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 773,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 802,
									"end": 856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1101,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1221,
									"end": 1226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1228,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1244,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 356,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e0a2125de31b30bec647725a2ccaf3375baf442def5ecbb3f8d4bf10456d9c364736f6c63430008070033",
									".code": [
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "A4821719"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 237,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 237,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 237,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 237,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 237,
											"end": 353,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 237,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 302,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 283,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 319,
											"end": 325,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 319,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 335,
											"end": 344,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 237,
											"end": 353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 84,
											"end": 85,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 118,
											"end": 119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 186,
											"end": 252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 176,
											"end": 257,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 546,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyToken()": "a4821719"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens.sol\":\"Tokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens.sol\":{\"keccak256\":\"0x6a14f97edc14fb8c4445809b45c9bfc53d253e88dc052d0aca688d98922a2b0c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://057fb5f2e41a17988a2018a2a85570cb5ec207347d465c492576f22ca8006139\",\"dweb:/ipfs/QmVbVeraA7EpW8nDwngMGiNSw6s4ESy5b674tWZzYstk68\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/tokens.sol": {
				"ast": {
					"absolutePath": "contracts/tokens.sol",
					"exportedSymbols": {
						"Tokens": [
							36
						]
					},
					"id": 37,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "Tokens",
							"nameLocation": "72:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "111:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "86:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "94:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "86:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "105:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "wallet",
									"nameLocation": "142:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "126:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "126:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "194:35:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "205:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 13,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "205:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "205:16:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "169:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "169:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:25:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:0:0"
									},
									"scope": 36,
									"src": "157:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "272:81:0",
										"statements": [
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 20,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "283:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 23,
														"indexExpression": {
															"expression": {
																"id": 21,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "292:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "292:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "283:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "283:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "283:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "335:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "335:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 27,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "319:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "319:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "319:26:0"
											}
										]
									},
									"functionSelector": "a4821719",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "246:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:0"
									},
									"scope": 36,
									"src": "237:116:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "63:293:0",
							"usedErrors": []
						}
					],
					"src": "37:319:0"
				},
				"id": 0
			}
		}
	}
}