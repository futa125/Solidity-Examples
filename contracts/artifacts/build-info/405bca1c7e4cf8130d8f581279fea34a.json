{
	"id": "405bca1c7e4cf8130d8f581279fea34a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\ncontract Tokens {\r\n    struct Token {\r\n        uint cost;\r\n    }\r\n\r\n    mapping(address => Token[]) balances;\r\n    address payable wallet;\r\n\r\n    constructor(address payable _wallet) {\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function buyToken() public payable {\r\n        balances[msg.sender].push(\r\n            Token(20)\r\n        );\r\n        wallet.transfer(20);\r\n    }\r\n\r\n    function sellToken() public payable returns(bool){\r\n        if (balances[msg.sender].length == 0) {\r\n            return false;\r\n        }\r\n        Token memory token = balances[msg.sender][balances[msg.sender].length - 1];\r\n        delete balances[msg.sender][balances[msg.sender].length - 1];\r\n        payable(msg.sender).transfer(token.cost);\r\n        return true;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens.sol": {
				"Tokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_wallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens.sol\":63:817  contract Tokens {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens.sol\":209:281  constructor(address payable _wallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokens.sol\":266:273  _wallet */\n  dup1\n    /* \"contracts/tokens.sol\":257:263  wallet */\n  0x01\n  0x00\n    /* \"contracts/tokens.sol\":257:273  wallet = _wallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens.sol\":209:281  constructor(address payable _wallet) {\r... */\n  pop\n    /* \"contracts/tokens.sol\":63:817  contract Tokens {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:166   */\ntag_8:\n    /* \"#utility.yul\":72:77   */\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_10\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:539   */\ntag_3:\n    /* \"#utility.yul\":250:256   */\n  0x00\n    /* \"#utility.yul\":299:301   */\n  0x20\n    /* \"#utility.yul\":287:296   */\n  dup3\n    /* \"#utility.yul\":278:285   */\n  dup5\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:386   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":305:384   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":267:386   */\ntag_13:\n    /* \"#utility.yul\":425:426   */\n  0x00\n    /* \"#utility.yul\":450:522   */\n  tag_16\n    /* \"#utility.yul\":514:521   */\n  dup5\n    /* \"#utility.yul\":505:511   */\n  dup3\n    /* \"#utility.yul\":494:503   */\n  dup6\n    /* \"#utility.yul\":490:512   */\n  add\n    /* \"#utility.yul\":450:522   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":440:522   */\n  swap2\n  pop\n    /* \"#utility.yul\":396:532   */\n  pop\n    /* \"#utility.yul\":172:539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":626:730   */\ntag_19:\n    /* \"#utility.yul\":671:678   */\n  0x00\n    /* \"#utility.yul\":700:724   */\n  tag_21\n    /* \"#utility.yul\":718:723   */\n  dup3\n    /* \"#utility.yul\":700:724   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":689:724   */\n  swap1\n  pop\n    /* \"#utility.yul\":626:730   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":736:862   */\ntag_22:\n    /* \"#utility.yul\":773:780   */\n  0x00\n    /* \"#utility.yul\":813:855   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":806:811   */\n  dup3\n    /* \"#utility.yul\":802:856   */\n  and\n    /* \"#utility.yul\":791:856   */\n  swap1\n  pop\n    /* \"#utility.yul\":736:862   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1108   */\ntag_15:\n    /* \"#utility.yul\":1100:1101   */\n  0x00\n    /* \"#utility.yul\":1097:1098   */\n  dup1\n    /* \"#utility.yul\":1090:1102   */\n  revert\n    /* \"#utility.yul\":1114:1252   */\ntag_11:\n    /* \"#utility.yul\":1195:1227   */\n  tag_28\n    /* \"#utility.yul\":1221:1226   */\n  dup2\n    /* \"#utility.yul\":1195:1227   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1188:1193   */\n  dup2\n    /* \"#utility.yul\":1185:1228   */\n  eq\n    /* \"#utility.yul\":1175:1246   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1239:1240   */\n  dup1\n    /* \"#utility.yul\":1232:1244   */\n  revert\n    /* \"#utility.yul\":1175:1246   */\ntag_29:\n    /* \"#utility.yul\":1114:1252   */\n  pop\n  jump\t// out\n    /* \"contracts/tokens.sol\":63:817  contract Tokens {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens.sol\":63:817  contract Tokens {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9769f0b0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa4821719\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokens.sol\":441:814  function sellToken() public payable returns(bool){\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens.sol\":289:433  function buyToken() public payable {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/tokens.sol\":441:814  function sellToken() public payable returns(bool){\r... */\n    tag_5:\n        /* \"contracts/tokens.sol\":485:489  bool */\n      0x00\n        /* \"contracts/tokens.sol\":536:537  0 */\n      dup1\n        /* \"contracts/tokens.sol\":505:513  balances */\n      0x00\n        /* \"contracts/tokens.sol\":505:525  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":514:524  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":505:525  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":505:532  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":505:537  balances[msg.sender].length == 0 */\n      eq\n        /* \"contracts/tokens.sol\":501:578  if (balances[msg.sender].length == 0) {\r... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/tokens.sol\":561:566  false */\n      0x00\n        /* \"contracts/tokens.sol\":554:566  return false */\n      swap1\n      pop\n      jump(tag_10)\n        /* \"contracts/tokens.sol\":501:578  if (balances[msg.sender].length == 0) {\r... */\n    tag_11:\n        /* \"contracts/tokens.sol\":588:606  Token memory token */\n      0x00\n        /* \"contracts/tokens.sol\":609:617  balances */\n      dup1\n        /* \"contracts/tokens.sol\":609:629  balances[msg.sender] */\n      0x00\n        /* \"contracts/tokens.sol\":618:628  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":609:629  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":660:661  1 */\n      0x01\n        /* \"contracts/tokens.sol\":630:638  balances */\n      0x00\n        /* \"contracts/tokens.sol\":630:650  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":639:649  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":630:650  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":630:657  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":630:661  balances[msg.sender].length - 1 */\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"contracts/tokens.sol\":609:662  balances[msg.sender][balances[msg.sender].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/tokens.sol\":588:662  Token memory token = balances[msg.sender][balances[msg.sender].length - 1] */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":680:688  balances */\n      0x00\n        /* \"contracts/tokens.sol\":680:700  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":689:699  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":680:700  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":731:732  1 */\n      0x01\n        /* \"contracts/tokens.sol\":701:709  balances */\n      0x00\n        /* \"contracts/tokens.sol\":701:721  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":710:720  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":701:721  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":701:728  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":701:732  balances[msg.sender].length - 1 */\n      tag_18\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"contracts/tokens.sol\":680:733  balances[msg.sender][balances[msg.sender].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_19\n      jumpi\n      tag_20\n      tag_16\n      jump\t// in\n    tag_20:\n    tag_19:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/tokens.sol\":673:733  delete balances[msg.sender][balances[msg.sender].length - 1] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens.sol\":752:762  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":744:772  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":744:784  payable(msg.sender).transfer(token.cost) */\n      0x08fc\n        /* \"contracts/tokens.sol\":773:778  token */\n      dup3\n        /* \"contracts/tokens.sol\":773:783  token.cost */\n      0x00\n      add\n      mload\n        /* \"contracts/tokens.sol\":744:784  payable(msg.sender).transfer(token.cost) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n        /* \"contracts/tokens.sol\":802:806  true */\n      0x01\n        /* \"contracts/tokens.sol\":795:806  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokens.sol\":441:814  function sellToken() public payable returns(bool){\r... */\n    tag_10:\n      swap1\n      jump\t// out\n        /* \"contracts/tokens.sol\":289:433  function buyToken() public payable {\r... */\n    tag_9:\n        /* \"contracts/tokens.sol\":335:343  balances */\n      0x00\n        /* \"contracts/tokens.sol\":335:355  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":344:354  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":335:355  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":375:384  Token(20) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/tokens.sol\":381:383  20 */\n      0x14\n        /* \"contracts/tokens.sol\":375:384  Token(20) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/tokens.sol\":335:395  balances[msg.sender].push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens.sol\":406:412  wallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":406:421  wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":406:425  wallet.transfer(20) */\n      0x08fc\n        /* \"contracts/tokens.sol\":422:424  20 */\n      0x14\n        /* \"contracts/tokens.sol\":406:425  wallet.transfer(20) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n        /* \"contracts/tokens.sol\":289:433  function buyToken() public payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_29:\n        /* \"#utility.yul\":88:109   */\n      tag_31\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:332   */\n    tag_7:\n        /* \"#utility.yul\":209:213   */\n      0x00\n        /* \"#utility.yul\":247:249   */\n      0x20\n        /* \"#utility.yul\":236:245   */\n      dup3\n        /* \"#utility.yul\":232:250   */\n      add\n        /* \"#utility.yul\":224:250   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:325   */\n      tag_34\n        /* \"#utility.yul\":322:323   */\n      0x00\n        /* \"#utility.yul\":311:320   */\n      dup4\n        /* \"#utility.yul\":307:324   */\n      add\n        /* \"#utility.yul\":298:304   */\n      dup5\n        /* \"#utility.yul\":260:325   */\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":122:332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":338:529   */\n    tag_13:\n        /* \"#utility.yul\":378:382   */\n      0x00\n        /* \"#utility.yul\":398:418   */\n      tag_36\n        /* \"#utility.yul\":416:417   */\n      dup3\n        /* \"#utility.yul\":398:418   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":393:418   */\n      swap2\n      pop\n        /* \"#utility.yul\":432:452   */\n      tag_38\n        /* \"#utility.yul\":450:451   */\n      dup4\n        /* \"#utility.yul\":432:452   */\n      tag_37\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":427:452   */\n      swap3\n      pop\n        /* \"#utility.yul\":471:472   */\n      dup3\n        /* \"#utility.yul\":468:469   */\n      dup3\n        /* \"#utility.yul\":465:473   */\n      lt\n        /* \"#utility.yul\":462:496   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":476:494   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":462:496   */\n    tag_39:\n        /* \"#utility.yul\":521:522   */\n      dup3\n        /* \"#utility.yul\":518:519   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      sub\n        /* \"#utility.yul\":506:523   */\n      swap1\n      pop\n        /* \"#utility.yul\":338:529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":535:625   */\n    tag_32:\n        /* \"#utility.yul\":569:576   */\n      0x00\n        /* \"#utility.yul\":612:617   */\n      dup2\n        /* \"#utility.yul\":605:618   */\n      iszero\n        /* \"#utility.yul\":598:619   */\n      iszero\n        /* \"#utility.yul\":587:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":535:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:708   */\n    tag_37:\n        /* \"#utility.yul\":668:675   */\n      0x00\n        /* \"#utility.yul\":697:702   */\n      dup2\n        /* \"#utility.yul\":686:702   */\n      swap1\n      pop\n        /* \"#utility.yul\":631:708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:894   */\n    tag_41:\n        /* \"#utility.yul\":762:839   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":759:760   */\n      0x00\n        /* \"#utility.yul\":752:840   */\n      mstore\n        /* \"#utility.yul\":859:863   */\n      0x11\n        /* \"#utility.yul\":856:857   */\n      0x04\n        /* \"#utility.yul\":849:864   */\n      mstore\n        /* \"#utility.yul\":883:887   */\n      0x24\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":873:888   */\n      revert\n        /* \"#utility.yul\":900:1080   */\n    tag_16:\n        /* \"#utility.yul\":948:1025   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":945:946   */\n      0x00\n        /* \"#utility.yul\":938:1026   */\n      mstore\n        /* \"#utility.yul\":1045:1049   */\n      0x32\n        /* \"#utility.yul\":1042:1043   */\n      0x04\n        /* \"#utility.yul\":1035:1050   */\n      mstore\n        /* \"#utility.yul\":1069:1073   */\n      0x24\n        /* \"#utility.yul\":1066:1067   */\n      0x00\n        /* \"#utility.yul\":1059:1074   */\n      revert\n\n    auxdata: 0xa264697066735822122075151b9e02b8ecef76065407a65767a95072dafcb337c9055ad0ad19c907b0b364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1255:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "7:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "305:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:1"
															},
															"nodeType": "YulIf",
															"src": "267:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "396:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "411:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "415:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "440:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "494:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "505:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "450:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "440:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "172:367:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "595:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "578:6:1",
														"type": ""
													}
												],
												"src": "545:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "679:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "689:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "718:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "700:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "689:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "661:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"src": "626:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "781:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "791:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "806:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "791:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "763:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "773:7:1",
														"type": ""
													}
												],
												"src": "736:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "957:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "967:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "868:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "991:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1230:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1242:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1188:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1221:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1195:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1195:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1185:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:51:1"
															},
															"nodeType": "YulIf",
															"src": "1175:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1158:5:1",
														"type": ""
													}
												],
												"src": "1114:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161057b38038061057b8339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b610463806101186000396000f3fe6080604052600436106100295760003560e01c80639769f0b01461002e578063a48217191461004c575b600080fd5b610036610056565b604051610043919061036a565b60405180910390f35b610054610270565b005b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014156100aa576000905061026d565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506101389190610385565b81548110610149576101486103fe565b5b9060005260206000200160405180602001604052908160008201548152505090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506101f69190610385565b81548110610207576102066103fe565b5b9060005260206000200160008082016000905550503373ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f19350505050158015610266573d6000803e3d6000fd5b5060019150505b90565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060200160405280601481525090806001815401808255809150506001900390600052602060002001600090919091909150600082015181600001555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60149081150290604051600060405180830381858888f19350505050158015610358573d6000803e3d6000fd5b50565b610364816103b9565b82525050565b600060208201905061037f600083018461035b565b92915050565b6000610390826103c5565b915061039b836103c5565b9250828210156103ae576103ad6103cf565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122075151b9e02b8ecef76065407a65767a95072dafcb337c9055ad0ad19c907b0b364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x57B CODESIZE SUB DUP1 PUSH2 0x57B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88 DUP2 PUSH2 0xF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4 JUMPI PUSH2 0xA3 PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP5 DUP3 DUP6 ADD PUSH2 0x79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6 DUP3 PUSH2 0xCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB DUP2 PUSH2 0xBB JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x463 DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x4C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54 PUSH2 0x270 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0x3FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x207 JUMPI PUSH2 0x206 PUSH2 0x3FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x14 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x39B DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x3CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x151B9E02B8ECEF76065407A65767A95072DAFCB337C9 SDIV GAS 0xD0 0xAD NOT 0xC9 SMOD 0xB0 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "63:754:0:-:0;;;209:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;266:7;257:6;;:16;;;;;;;;;;;;;;;;;;209:72;63:754;;7:159:1;72:5;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;7:159;;;;:::o;172:367::-;250:6;299:2;287:9;278:7;274:23;270:32;267:119;;;305:79;;:::i;:::-;267:119;425:1;450:72;514:7;505:6;494:9;490:22;450:72;:::i;:::-;440:82;;396:136;172:367;;;;:::o;626:104::-;671:7;700:24;718:5;700:24;:::i;:::-;689:35;;626:104;;;:::o;736:126::-;773:7;813:42;806:5;802:54;791:65;;736:126;;;:::o;991:117::-;1100:1;1097;1090:12;1114:138;1195:32;1221:5;1195:32;:::i;:::-;1188:5;1185:43;1175:71;;1242:1;1239;1232:12;1175:71;1114:138;:::o;63:754:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyToken_42": {
									"entryPoint": 624,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellToken_101": {
									"entryPoint": 86,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1083:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "307:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "260:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "209:4:1",
														"type": ""
													}
												],
												"src": "122:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "383:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "393:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "416:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "398:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "393:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "427:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "450:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "432:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "427:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "474:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "476:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "476:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "476:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "468:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "471:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "465:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:8:1"
															},
															"nodeType": "YulIf",
															"src": "462:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "506:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "518:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "521:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "506:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "369:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "372:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "378:4:1",
														"type": ""
													}
												],
												"src": "338:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "577:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "587:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "612:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "605:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "587:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "559:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "569:7:1",
														"type": ""
													}
												],
												"src": "535:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "676:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "686:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "697:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "686:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "668:7:1",
														"type": ""
													}
												],
												"src": "631:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "742:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "752:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "859:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "849:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "873:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "714:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "928:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "948:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "938:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1042:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1045:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1035:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1035:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1069:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1059:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "900:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80639769f0b01461002e578063a48217191461004c575b600080fd5b610036610056565b604051610043919061036a565b60405180910390f35b610054610270565b005b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014156100aa576000905061026d565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506101389190610385565b81548110610149576101486103fe565b5b9060005260206000200160405180602001604052908160008201548152505090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506101f69190610385565b81548110610207576102066103fe565b5b9060005260206000200160008082016000905550503373ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f19350505050158015610266573d6000803e3d6000fd5b5060019150505b90565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060200160405280601481525090806001815401808255809150506001900390600052602060002001600090919091909150600082015181600001555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60149081150290604051600060405180830381858888f19350505050158015610358573d6000803e3d6000fd5b50565b610364816103b9565b82525050565b600060208201905061037f600083018461035b565b92915050565b6000610390826103c5565b915061039b836103c5565b9250828210156103ae576103ad6103cf565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122075151b9e02b8ecef76065407a65767a95072dafcb337c9055ad0ad19c907b0b364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x4C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54 PUSH2 0x270 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0x3FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x207 JUMPI PUSH2 0x206 PUSH2 0x3FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x14 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x39B DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x3CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x151B9E02B8ECEF76065407A65767A95072DAFCB337C9 SDIV GAS 0xD0 0xAD NOT 0xC9 SMOD 0xB0 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "63:754:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;441:373;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;289:144;;;:::i;:::-;;441:373;485:4;536:1;505:8;:20;514:10;505:20;;;;;;;;;;;;;;;:27;;;;:32;501:77;;;561:5;554:12;;;;501:77;588:18;609:8;:20;618:10;609:20;;;;;;;;;;;;;;;660:1;630:8;:20;639:10;630:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;609:53;;;;;;;;:::i;:::-;;;;;;;;;588:74;;;;;;;;;;;;;;;;;;;680:8;:20;689:10;680:20;;;;;;;;;;;;;;;731:1;701:8;:20;710:10;701:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;680:53;;;;;;;;:::i;:::-;;;;;;;;;;673:60;;;;;;;;752:10;744:28;;:40;773:5;:10;;;744:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:4;795:11;;;441:373;;:::o;289:144::-;335:8;:20;344:10;335:20;;;;;;;;;;;;;;;375:9;;;;;;;;381:2;375:9;;;335:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:6;;;;;;;;;;;:15;;:19;422:2;406:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:144::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:210::-;209:4;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;122:210;;;;:::o;338:191::-;378:4;398:20;416:1;398:20;:::i;:::-;393:25;;432:20;450:1;432:20;:::i;:::-;427:25;;471:1;468;465:8;462:34;;;476:18;;:::i;:::-;462:34;521:1;518;514:9;506:17;;338:191;;;;:::o;535:90::-;569:7;612:5;605:13;598:21;587:32;;535:90;;;:::o;631:77::-;668:7;697:5;686:16;;631:77;;;:::o;714:180::-;762:77;759:1;752:88;859:4;856:1;849:15;883:4;880:1;873:15;900:180;948:77;945:1;938:88;1045:4;1042:1;1035:15;1069:4;1066:1;1059:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "224600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyToken()": "infinite",
								"sellToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 266,
									"end": 273,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 77,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 425,
									"end": 426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 521,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 505,
									"end": 511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 494,
									"end": 503,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 490,
									"end": 512,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 671,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 773,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 802,
									"end": 856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1101,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1221,
									"end": 1226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1228,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1244,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 817,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075151b9e02b8ecef76065407a65767a95072dafcb337c9055ad0ad19c907b0b364736f6c63430008070033",
									".code": [
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "9769F0B0"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "A4821719"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 289,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 433,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 485,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 505,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 524,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 505,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 505,
											"end": 532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 505,
											"end": 532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 505,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 505,
											"end": 532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 505,
											"end": 537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 501,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 501,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 561,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 554,
											"end": 566,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 628,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 629,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 630,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 639,
											"end": 649,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 630,
											"end": 650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 630,
											"end": 650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 630,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 630,
											"end": 661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 630,
											"end": 661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 630,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 609,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 699,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 701,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 710,
											"end": 720,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 721,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 701,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 701,
											"end": 732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 701,
											"end": 732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 701,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 673,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 733,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 673,
											"end": 733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 744,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 773,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 773,
											"end": 783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 744,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 744,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 795,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 795,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 795,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 354,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 406,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 406,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 406,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 433,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 232,
											"end": 250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 338,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 338,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 378,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 398,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 398,
											"end": 418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 432,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 432,
											"end": 452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 432,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 427,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 465,
											"end": 473,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 462,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 462,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 462,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 476,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 476,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 476,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 462,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 462,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 518,
											"end": 519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 514,
											"end": 523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 506,
											"end": 523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 529,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 338,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 535,
											"end": 625,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 535,
											"end": 625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 598,
											"end": 619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 625,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 631,
											"end": 708,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 631,
											"end": 708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 714,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 762,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 859,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 883,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 900,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 948,
											"end": 1025,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 945,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 1026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyToken()": "a4821719",
							"sellToken()": "9769f0b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens.sol\":\"Tokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens.sol\":{\"keccak256\":\"0xe5aa2fd995bac3b86d228fbe9b9b743679ab2a478e54cbfe387a598351cff873\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aa56d4ae1d4404305a10ff027d768ad74ff12e02f6eb42f936709071310fd6f6\",\"dweb:/ipfs/QmSVQJpSx9Eur4rNk933wiuiji1DQQc2rSJFqNFPSCxPwn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/tokens.sol": {
				"ast": {
					"absolutePath": "contracts/tokens.sol",
					"exportedSymbols": {
						"Tokens": [
							102
						]
					},
					"id": 103,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "Tokens",
							"nameLocation": "72:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Tokens.Token",
									"id": 4,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "cost",
											"nameLocation": "115:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 4,
											"src": "110:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "110:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "93:5:0",
									"nodeType": "StructDefinition",
									"scope": 102,
									"src": "86:41:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "163:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "135:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct Tokens.Token[])"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "143:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "135:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct Tokens.Token[])"
										},
										"valueType": {
											"baseType": {
												"id": 7,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 6,
													"name": "Token",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 4,
													"src": "154:5:0"
												},
												"referencedDeclaration": 4,
												"src": "154:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Token_$4_storage_ptr",
													"typeString": "struct Tokens.Token"
												}
											},
											"id": 8,
											"nodeType": "ArrayTypeName",
											"src": "154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr",
												"typeString": "struct Tokens.Token[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "wallet",
									"nameLocation": "194:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "178:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "178:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "246:35:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "257:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "257:16:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "237:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "221:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:25:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:0"
									},
									"scope": 102,
									"src": "209:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "324:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "3230",
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "381:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	}
																],
																"id": 30,
																"name": "Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Token_$4_storage_ptr_$",
																	"typeString": "type(struct Tokens.Token storage pointer)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "375:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																"typeString": "struct Tokens.Token memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																"typeString": "struct Tokens.Token memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 25,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "335:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 28,
															"indexExpression": {
																"expression": {
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "335:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr_$_t_struct$_Token_$4_storage_$returns$__$bound_to$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Tokens.Token storage ref[] storage pointer,struct Tokens.Token storage ref)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "335:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "335:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3230",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "422:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"expression": {
															"id": 35,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "406:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "406:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "406:19:0"
											}
										]
									},
									"functionSelector": "a4821719",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "298:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 102,
									"src": "289:144:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "490:324:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 47,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "505:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 50,
															"indexExpression": {
																"expression": {
																	"id": 48,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "514:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "514:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "505:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "505:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "505:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "IfStatement",
												"src": "501:77:0",
												"trueBody": {
													"id": 56,
													"nodeType": "Block",
													"src": "539:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "561:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 46,
															"id": 55,
															"nodeType": "Return",
															"src": "554:12:0"
														}
													]
												}
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "601:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "588:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
															"typeString": "struct Tokens.Token"
														},
														"typeName": {
															"id": 59,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 58,
																"name": "Token",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4,
																"src": "588:5:0"
															},
															"referencedDeclaration": 4,
															"src": "588:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$4_storage_ptr",
																"typeString": "struct Tokens.Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 61,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
															}
														},
														"id": 64,
														"indexExpression": {
															"expression": {
																"id": 62,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "618:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "618:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "609:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
															"typeString": "struct Tokens.Token storage ref[] storage ref"
														}
													},
													"id": 72,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 65,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "630:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																	}
																},
																"id": 68,
																"indexExpression": {
																	"expression": {
																		"id": 66,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "639:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "639:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "630:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																	"typeString": "struct Tokens.Token storage ref[] storage ref"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "630:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "630:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "609:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Token_$4_storage",
														"typeString": "struct Tokens.Token storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "588:74:0"
											},
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "673:60:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 74,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "680:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 77,
															"indexExpression": {
																"expression": {
																	"id": 75,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "689:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "680:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 85,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 78,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "701:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																		}
																	},
																	"id": 81,
																	"indexExpression": {
																		"expression": {
																			"id": 79,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "710:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "710:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "701:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																		"typeString": "struct Tokens.Token storage ref[] storage ref"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "701:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "701:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "680:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$4_storage",
															"typeString": "struct Tokens.Token storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "673:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 94,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "773:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																	"typeString": "struct Tokens.Token memory"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "cost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "773:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 90,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "752:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "752:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "744:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 88,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "744:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "744:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "744:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "744:40:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "802:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 46,
												"id": 99,
												"nodeType": "Return",
												"src": "795:11:0"
											}
										]
									},
									"functionSelector": "9769f0b0",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellToken",
									"nameLocation": "450:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "485:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:6:0"
									},
									"scope": 102,
									"src": "441:373:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 103,
							"src": "63:754:0",
							"usedErrors": []
						}
					],
					"src": "37:780:0"
				},
				"id": 0
			}
		}
	}
}