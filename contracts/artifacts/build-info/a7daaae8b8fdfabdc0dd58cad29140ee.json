{
	"id": "a7daaae8b8fdfabdc0dd58cad29140ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\ncontract Tokens {\r\n    struct Token {\r\n        uint cost;\r\n    }\r\n\r\n    mapping(address => Token[]) balances;\r\n    address payable wallet;\r\n\r\n    constructor(address payable _wallet) {\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function buyToken() public payable {\r\n        balances[msg.sender].push(\r\n            Token(msg.value)\r\n        );\r\n        wallet.transfer(msg.value);\r\n    }\r\n\r\n    function sellToken() public payable returns(string memory){\r\n        if (balances[msg.sender].length == 0) {\r\n            return \"FAILED\";\r\n        }\r\n        Token memory token = balances[msg.sender][balances[msg.sender].length - 1];\r\n        delete balances[msg.sender][balances[msg.sender].length - 1];\r\n        payable(msg.sender).transfer(token.cost);\r\n        return \"SUCCESS\";\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens.sol": {
				"Tokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_wallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellToken",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens.sol\":63:848  contract Tokens {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens.sol\":209:281  constructor(address payable _wallet) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokens.sol\":266:273  _wallet */\n  dup1\n    /* \"contracts/tokens.sol\":257:263  wallet */\n  0x01\n  0x00\n    /* \"contracts/tokens.sol\":257:273  wallet = _wallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens.sol\":209:281  constructor(address payable _wallet) {\r... */\n  pop\n    /* \"contracts/tokens.sol\":63:848  contract Tokens {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:166   */\ntag_8:\n    /* \"#utility.yul\":72:77   */\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_10\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:539   */\ntag_3:\n    /* \"#utility.yul\":250:256   */\n  0x00\n    /* \"#utility.yul\":299:301   */\n  0x20\n    /* \"#utility.yul\":287:296   */\n  dup3\n    /* \"#utility.yul\":278:285   */\n  dup5\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:386   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":305:384   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":267:386   */\ntag_13:\n    /* \"#utility.yul\":425:426   */\n  0x00\n    /* \"#utility.yul\":450:522   */\n  tag_16\n    /* \"#utility.yul\":514:521   */\n  dup5\n    /* \"#utility.yul\":505:511   */\n  dup3\n    /* \"#utility.yul\":494:503   */\n  dup6\n    /* \"#utility.yul\":490:512   */\n  add\n    /* \"#utility.yul\":450:522   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":440:522   */\n  swap2\n  pop\n    /* \"#utility.yul\":396:532   */\n  pop\n    /* \"#utility.yul\":172:539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":626:730   */\ntag_19:\n    /* \"#utility.yul\":671:678   */\n  0x00\n    /* \"#utility.yul\":700:724   */\n  tag_21\n    /* \"#utility.yul\":718:723   */\n  dup3\n    /* \"#utility.yul\":700:724   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":689:724   */\n  swap1\n  pop\n    /* \"#utility.yul\":626:730   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":736:862   */\ntag_22:\n    /* \"#utility.yul\":773:780   */\n  0x00\n    /* \"#utility.yul\":813:855   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":806:811   */\n  dup3\n    /* \"#utility.yul\":802:856   */\n  and\n    /* \"#utility.yul\":791:856   */\n  swap1\n  pop\n    /* \"#utility.yul\":736:862   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1108   */\ntag_15:\n    /* \"#utility.yul\":1100:1101   */\n  0x00\n    /* \"#utility.yul\":1097:1098   */\n  dup1\n    /* \"#utility.yul\":1090:1102   */\n  revert\n    /* \"#utility.yul\":1114:1252   */\ntag_11:\n    /* \"#utility.yul\":1195:1227   */\n  tag_28\n    /* \"#utility.yul\":1221:1226   */\n  dup2\n    /* \"#utility.yul\":1195:1227   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1188:1193   */\n  dup2\n    /* \"#utility.yul\":1185:1228   */\n  eq\n    /* \"#utility.yul\":1175:1246   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1239:1240   */\n  dup1\n    /* \"#utility.yul\":1232:1244   */\n  revert\n    /* \"#utility.yul\":1175:1246   */\ntag_29:\n    /* \"#utility.yul\":1114:1252   */\n  pop\n  jump\t// out\n    /* \"contracts/tokens.sol\":63:848  contract Tokens {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens.sol\":63:848  contract Tokens {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9769f0b0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa4821719\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tokens.sol\":455:845  function sellToken() public payable returns(string memory){\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens.sol\":289:447  function buyToken() public payable {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/tokens.sol\":455:845  function sellToken() public payable returns(string memory){\r... */\n    tag_5:\n        /* \"contracts/tokens.sol\":499:512  string memory */\n      0x60\n        /* \"contracts/tokens.sol\":559:560  0 */\n      0x00\n        /* \"contracts/tokens.sol\":528:536  balances */\n      dup1\n        /* \"contracts/tokens.sol\":528:548  balances[msg.sender] */\n      0x00\n        /* \"contracts/tokens.sol\":537:547  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":528:548  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":528:555  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":528:560  balances[msg.sender].length == 0 */\n      eq\n        /* \"contracts/tokens.sol\":524:604  if (balances[msg.sender].length == 0) {\r... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/tokens.sol\":577:592  return \"FAILED\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4641494c45440000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_10)\n        /* \"contracts/tokens.sol\":524:604  if (balances[msg.sender].length == 0) {\r... */\n    tag_11:\n        /* \"contracts/tokens.sol\":614:632  Token memory token */\n      0x00\n        /* \"contracts/tokens.sol\":635:643  balances */\n      dup1\n        /* \"contracts/tokens.sol\":635:655  balances[msg.sender] */\n      0x00\n        /* \"contracts/tokens.sol\":644:654  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":635:655  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":686:687  1 */\n      0x01\n        /* \"contracts/tokens.sol\":656:664  balances */\n      0x00\n        /* \"contracts/tokens.sol\":656:676  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":665:675  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":656:676  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":656:683  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":656:687  balances[msg.sender].length - 1 */\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"contracts/tokens.sol\":635:688  balances[msg.sender][balances[msg.sender].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/tokens.sol\":614:688  Token memory token = balances[msg.sender][balances[msg.sender].length - 1] */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":706:714  balances */\n      0x00\n        /* \"contracts/tokens.sol\":706:726  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":715:725  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":706:726  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":757:758  1 */\n      0x01\n        /* \"contracts/tokens.sol\":727:735  balances */\n      0x00\n        /* \"contracts/tokens.sol\":727:747  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":727:747  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":727:754  balances[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens.sol\":727:758  balances[msg.sender].length - 1 */\n      tag_18\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"contracts/tokens.sol\":706:759  balances[msg.sender][balances[msg.sender].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_19\n      jumpi\n      tag_20\n      tag_16\n      jump\t// in\n    tag_20:\n    tag_19:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/tokens.sol\":699:759  delete balances[msg.sender][balances[msg.sender].length - 1] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens.sol\":778:788  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":770:798  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":770:810  payable(msg.sender).transfer(token.cost) */\n      0x08fc\n        /* \"contracts/tokens.sol\":799:804  token */\n      dup3\n        /* \"contracts/tokens.sol\":799:809  token.cost */\n      0x00\n      add\n      mload\n        /* \"contracts/tokens.sol\":770:810  payable(msg.sender).transfer(token.cost) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n        /* \"contracts/tokens.sol\":821:837  return \"SUCCESS\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x5355434345535300000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/tokens.sol\":455:845  function sellToken() public payable returns(string memory){\r... */\n    tag_10:\n      swap1\n      jump\t// out\n        /* \"contracts/tokens.sol\":289:447  function buyToken() public payable {\r... */\n    tag_9:\n        /* \"contracts/tokens.sol\":335:343  balances */\n      0x00\n        /* \"contracts/tokens.sol\":335:355  balances[msg.sender] */\n      dup1\n        /* \"contracts/tokens.sol\":344:354  msg.sender */\n      caller\n        /* \"contracts/tokens.sol\":335:355  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokens.sol\":375:391  Token(msg.value) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/tokens.sol\":381:390  msg.value */\n      callvalue\n        /* \"contracts/tokens.sol\":375:391  Token(msg.value) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/tokens.sol\":335:402  balances[msg.sender].push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens.sol\":413:419  wallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":413:428  wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens.sol\":413:439  wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/tokens.sol\":429:438  msg.value */\n      callvalue\n        /* \"contracts/tokens.sol\":413:439  wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n        /* \"contracts/tokens.sol\":289:447  function buyToken() public payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:371   */\n    tag_29:\n        /* \"#utility.yul\":95:98   */\n      0x00\n        /* \"#utility.yul\":123:162   */\n      tag_31\n        /* \"#utility.yul\":156:161   */\n      dup3\n        /* \"#utility.yul\":123:162   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":178:249   */\n      tag_33\n        /* \"#utility.yul\":242:248   */\n      dup2\n        /* \"#utility.yul\":237:240   */\n      dup6\n        /* \"#utility.yul\":178:249   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":171:249   */\n      swap4\n      pop\n        /* \"#utility.yul\":258:310   */\n      tag_35\n        /* \"#utility.yul\":303:309   */\n      dup2\n        /* \"#utility.yul\":298:301   */\n      dup6\n        /* \"#utility.yul\":291:295   */\n      0x20\n        /* \"#utility.yul\":284:289   */\n      dup7\n        /* \"#utility.yul\":280:296   */\n      add\n        /* \"#utility.yul\":258:310   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":335:364   */\n      tag_37\n        /* \"#utility.yul\":357:363   */\n      dup2\n        /* \"#utility.yul\":335:364   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":330:333   */\n      dup5\n        /* \"#utility.yul\":326:365   */\n      add\n        /* \"#utility.yul\":319:365   */\n      swap2\n      pop\n        /* \"#utility.yul\":99:371   */\n      pop\n        /* \"#utility.yul\":7:371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":377:690   */\n    tag_7:\n        /* \"#utility.yul\":490:494   */\n      0x00\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":517:526   */\n      dup3\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"#utility.yul\":505:531   */\n      swap1\n      pop\n        /* \"#utility.yul\":577:586   */\n      dup2\n        /* \"#utility.yul\":571:575   */\n      dup2\n        /* \"#utility.yul\":567:587   */\n      sub\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":552:561   */\n      dup4\n        /* \"#utility.yul\":548:565   */\n      add\n        /* \"#utility.yul\":541:588   */\n      mstore\n        /* \"#utility.yul\":605:683   */\n      tag_40\n        /* \"#utility.yul\":678:682   */\n      dup2\n        /* \"#utility.yul\":669:675   */\n      dup5\n        /* \"#utility.yul\":605:683   */\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":597:683   */\n      swap1\n      pop\n        /* \"#utility.yul\":377:690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:795   */\n    tag_32:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":782:787   */\n      dup2\n        /* \"#utility.yul\":776:788   */\n      mload\n        /* \"#utility.yul\":766:788   */\n      swap1\n      pop\n        /* \"#utility.yul\":696:795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":801:970   */\n    tag_34:\n        /* \"#utility.yul\":885:896   */\n      0x00\n        /* \"#utility.yul\":919:925   */\n      dup3\n        /* \"#utility.yul\":914:917   */\n      dup3\n        /* \"#utility.yul\":907:926   */\n      mstore\n        /* \"#utility.yul\":959:963   */\n      0x20\n        /* \"#utility.yul\":954:957   */\n      dup3\n        /* \"#utility.yul\":950:964   */\n      add\n        /* \"#utility.yul\":935:964   */\n      swap1\n      pop\n        /* \"#utility.yul\":801:970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":976:1167   */\n    tag_13:\n        /* \"#utility.yul\":1016:1020   */\n      0x00\n        /* \"#utility.yul\":1036:1056   */\n      tag_44\n        /* \"#utility.yul\":1054:1055   */\n      dup3\n        /* \"#utility.yul\":1036:1056   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1031:1056   */\n      swap2\n      pop\n        /* \"#utility.yul\":1070:1090   */\n      tag_46\n        /* \"#utility.yul\":1088:1089   */\n      dup4\n        /* \"#utility.yul\":1070:1090   */\n      tag_45\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1065:1090   */\n      swap3\n      pop\n        /* \"#utility.yul\":1109:1110   */\n      dup3\n        /* \"#utility.yul\":1106:1107   */\n      dup3\n        /* \"#utility.yul\":1103:1111   */\n      lt\n        /* \"#utility.yul\":1100:1134   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1114:1132   */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1100:1134   */\n    tag_47:\n        /* \"#utility.yul\":1159:1160   */\n      dup3\n        /* \"#utility.yul\":1156:1157   */\n      dup3\n        /* \"#utility.yul\":1152:1161   */\n      sub\n        /* \"#utility.yul\":1144:1161   */\n      swap1\n      pop\n        /* \"#utility.yul\":976:1167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1250   */\n    tag_45:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1239:1244   */\n      dup2\n        /* \"#utility.yul\":1228:1244   */\n      swap1\n      pop\n        /* \"#utility.yul\":1173:1250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1256:1563   */\n    tag_36:\n        /* \"#utility.yul\":1324:1325   */\n      0x00\n        /* \"#utility.yul\":1334:1447   */\n    tag_52:\n        /* \"#utility.yul\":1348:1354   */\n      dup4\n        /* \"#utility.yul\":1345:1346   */\n      dup2\n        /* \"#utility.yul\":1342:1355   */\n      lt\n        /* \"#utility.yul\":1334:1447   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1433:1434   */\n      dup1\n        /* \"#utility.yul\":1428:1431   */\n      dup3\n        /* \"#utility.yul\":1424:1435   */\n      add\n        /* \"#utility.yul\":1418:1436   */\n      mload\n        /* \"#utility.yul\":1414:1415   */\n      dup2\n        /* \"#utility.yul\":1409:1412   */\n      dup5\n        /* \"#utility.yul\":1405:1416   */\n      add\n        /* \"#utility.yul\":1398:1437   */\n      mstore\n        /* \"#utility.yul\":1370:1372   */\n      0x20\n        /* \"#utility.yul\":1367:1368   */\n      dup2\n        /* \"#utility.yul\":1363:1373   */\n      add\n        /* \"#utility.yul\":1358:1373   */\n      swap1\n      pop\n        /* \"#utility.yul\":1334:1447   */\n      jump(tag_52)\n    tag_54:\n        /* \"#utility.yul\":1465:1471   */\n      dup4\n        /* \"#utility.yul\":1462:1463   */\n      dup2\n        /* \"#utility.yul\":1459:1472   */\n      gt\n        /* \"#utility.yul\":1456:1557   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1545:1546   */\n      0x00\n        /* \"#utility.yul\":1536:1542   */\n      dup5\n        /* \"#utility.yul\":1531:1534   */\n      dup5\n        /* \"#utility.yul\":1527:1543   */\n      add\n        /* \"#utility.yul\":1520:1547   */\n      mstore\n        /* \"#utility.yul\":1456:1557   */\n    tag_55:\n        /* \"#utility.yul\":1305:1563   */\n      pop\n        /* \"#utility.yul\":1256:1563   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1569:1749   */\n    tag_49:\n        /* \"#utility.yul\":1617:1694   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1614:1615   */\n      0x00\n        /* \"#utility.yul\":1607:1695   */\n      mstore\n        /* \"#utility.yul\":1714:1718   */\n      0x11\n        /* \"#utility.yul\":1711:1712   */\n      0x04\n        /* \"#utility.yul\":1704:1719   */\n      mstore\n        /* \"#utility.yul\":1738:1742   */\n      0x24\n        /* \"#utility.yul\":1735:1736   */\n      0x00\n        /* \"#utility.yul\":1728:1743   */\n      revert\n        /* \"#utility.yul\":1755:1935   */\n    tag_16:\n        /* \"#utility.yul\":1803:1880   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1793:1881   */\n      mstore\n        /* \"#utility.yul\":1900:1904   */\n      0x32\n        /* \"#utility.yul\":1897:1898   */\n      0x04\n        /* \"#utility.yul\":1890:1905   */\n      mstore\n        /* \"#utility.yul\":1924:1928   */\n      0x24\n        /* \"#utility.yul\":1921:1922   */\n      0x00\n        /* \"#utility.yul\":1914:1929   */\n      revert\n        /* \"#utility.yul\":1941:2043   */\n    tag_38:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":2033:2035   */\n      0x1f\n        /* \"#utility.yul\":2029:2036   */\n      not\n        /* \"#utility.yul\":2024:2026   */\n      0x1f\n        /* \"#utility.yul\":2017:2022   */\n      dup4\n        /* \"#utility.yul\":2013:2027   */\n      add\n        /* \"#utility.yul\":2009:2037   */\n      and\n        /* \"#utility.yul\":1999:2037   */\n      swap1\n      pop\n        /* \"#utility.yul\":1941:2043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122053e5c88b66e2f1cf20f5a23fb224037eb08c1f660de85e091d7c82fec89b439d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1255:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "7:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "305:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:1"
															},
															"nodeType": "YulIf",
															"src": "267:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "396:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "411:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "415:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "440:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "494:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "505:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "450:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "440:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "172:367:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "595:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "578:6:1",
														"type": ""
													}
												],
												"src": "545:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "679:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "689:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "718:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "700:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "689:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "661:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"src": "626:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "781:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "791:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "806:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "791:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "763:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "773:7:1",
														"type": ""
													}
												],
												"src": "736:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "957:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "967:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "868:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1090:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "991:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1230:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1242:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1188:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1221:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1195:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1195:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1185:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:51:1"
															},
															"nodeType": "YulIf",
															"src": "1175:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1158:5:1",
														"type": ""
													}
												],
												"src": "1114:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106673803806106678339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61054f806101186000396000f3fe6080604052600436106100295760003560e01c80639769f0b01461002e578063a48217191461004c575b600080fd5b610036610056565b60405161004391906103fb565b60405180910390f35b6100546102d9565b005b606060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014156100df576040518060400160405280600681526020017f4641494c4544000000000000000000000000000000000000000000000000000081525090506102d6565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061016d9190610439565b8154811061017e5761017d6104d9565b5b9060005260206000200160405180602001604052908160008201548152505090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061022b9190610439565b8154811061023c5761023b6104d9565b5b9060005260206000200160008082016000905550503373ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f1935050505015801561029b573d6000803e3d6000fd5b506040518060400160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509150505b90565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052803481525090806001815401808255809150506001900390600052602060002001600090919091909150600082015181600001555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156103bf573d6000803e3d6000fd5b50565b60006103cd8261041d565b6103d78185610428565b93506103e7818560208601610477565b6103f081610508565b840191505092915050565b6000602082019050818103600083015261041581846103c2565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006104448261046d565b915061044f8361046d565b925082821015610462576104616104aa565b5b828203905092915050565b6000819050919050565b60005b8381101561049557808201518184015260208101905061047a565b838111156104a4576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000601f19601f830116905091905056fea264697066735822122053e5c88b66e2f1cf20f5a23fb224037eb08c1f660de85e091d7c82fec89b439d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x667 CODESIZE SUB DUP1 PUSH2 0x667 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88 DUP2 PUSH2 0xF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4 JUMPI PUSH2 0xA3 PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP5 DUP3 DUP6 ADD PUSH2 0x79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6 DUP3 PUSH2 0xCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB DUP2 PUSH2 0xBB JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x54F DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x4C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54 PUSH2 0x2D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xDF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4641494C45440000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x439 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x439 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23C JUMPI PUSH2 0x23B PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x29B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355434345535300000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD DUP3 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x3D7 DUP2 DUP6 PUSH2 0x428 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477 JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x415 DUP2 DUP5 PUSH2 0x3C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP3 PUSH2 0x46D JUMP JUMPDEST SWAP2 POP PUSH2 0x44F DUP4 PUSH2 0x46D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x4AA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x495 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xE5 0xC8 DUP12 PUSH7 0xE2F1CF20F5A23F 0xB2 0x24 SUB PUSH31 0xB08C1F660DE85E091D7C82FEC89B439D64736F6C6343000807003300000000 ",
							"sourceMap": "63:785:0:-:0;;;209:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;266:7;257:6;;:16;;;;;;;;;;;;;;;;;;209:72;63:785;;7:159:1;72:5;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;7:159;;;;:::o;172:367::-;250:6;299:2;287:9;278:7;274:23;270:32;267:119;;;305:79;;:::i;:::-;267:119;425:1;450:72;514:7;505:6;494:9;490:22;450:72;:::i;:::-;440:82;;396:136;172:367;;;;:::o;626:104::-;671:7;700:24;718:5;700:24;:::i;:::-;689:35;;626:104;;;:::o;736:126::-;773:7;813:42;806:5;802:54;791:65;;736:126;;;:::o;991:117::-;1100:1;1097;1090:12;1114:138;1195:32;1221:5;1195:32;:::i;:::-;1188:5;1185:43;1175:71;;1242:1;1239;1232:12;1175:71;1114:138;:::o;63:785:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyToken_44": {
									"entryPoint": 729,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellToken_103": {
									"entryPoint": 86,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2046:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "99:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "109:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "156:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "123:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "123:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "113:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "171:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "237:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "242:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "178:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "171:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "284:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "291:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "280:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "298:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "258:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "258:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "258:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "319:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "330:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "335:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "335:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "319:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "80:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "87:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "95:3:1",
														"type": ""
													}
												],
												"src": "7:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "563:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "548:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "571:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "577:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "541:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "669:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "678:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "605:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "467:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "479:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "490:4:1",
														"type": ""
													}
												],
												"src": "377:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "755:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "766:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "782:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "776:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "738:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													}
												],
												"src": "696:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "914:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "919:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "907:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "935:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "954:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "959:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "935:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "869:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "874:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "885:11:1",
														"type": ""
													}
												],
												"src": "801:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1021:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1031:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1054:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1036:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1031:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1065:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1088:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1070:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1065:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1112:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1114:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1114:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1114:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1106:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1109:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1103:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:8:1"
															},
															"nodeType": "YulIf",
															"src": "1100:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1144:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1156:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1159:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1152:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1144:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1007:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1010:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1016:4:1",
														"type": ""
													}
												],
												"src": "976:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1239:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1173:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1305:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1315:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1324:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1319:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1384:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1409:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1414:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1405:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1405:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1428:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1433:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1424:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1424:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1418:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1418:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1345:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1348:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1356:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1358:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1367:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1370:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1363:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1363:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1358:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1338:3:1",
																"statements": []
															},
															"src": "1334:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1481:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1531:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1536:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1527:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1527:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1520:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1520:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1520:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1462:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1465:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1459:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:13:1"
															},
															"nodeType": "YulIf",
															"src": "1456:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1287:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1292:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1297:6:1",
														"type": ""
													}
												],
												"src": "1256:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1597:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1614:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1711:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1714:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1728:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1569:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1803:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1897:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1900:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1890:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1921:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1924:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1914:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1755:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1989:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1999:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2017:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2024:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2013:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2033:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2029:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2029:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1972:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1982:6:1",
														"type": ""
													}
												],
												"src": "1941:102:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80639769f0b01461002e578063a48217191461004c575b600080fd5b610036610056565b60405161004391906103fb565b60405180910390f35b6100546102d9565b005b606060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014156100df576040518060400160405280600681526020017f4641494c4544000000000000000000000000000000000000000000000000000081525090506102d6565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061016d9190610439565b8154811061017e5761017d6104d9565b5b9060005260206000200160405180602001604052908160008201548152505090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061022b9190610439565b8154811061023c5761023b6104d9565b5b9060005260206000200160008082016000905550503373ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f1935050505015801561029b573d6000803e3d6000fd5b506040518060400160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509150505b90565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052803481525090806001815401808255809150506001900390600052602060002001600090919091909150600082015181600001555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156103bf573d6000803e3d6000fd5b50565b60006103cd8261041d565b6103d78185610428565b93506103e7818560208601610477565b6103f081610508565b840191505092915050565b6000602082019050818103600083015261041581846103c2565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006104448261046d565b915061044f8361046d565b925082821015610462576104616104aa565b5b828203905092915050565b6000819050919050565b60005b8381101561049557808201518184015260208101905061047a565b838111156104a4576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000601f19601f830116905091905056fea264697066735822122053e5c88b66e2f1cf20f5a23fb224037eb08c1f660de85e091d7c82fec89b439d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x4C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54 PUSH2 0x2D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xDF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4641494C45440000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x439 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x439 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23C JUMPI PUSH2 0x23B PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x29B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355434345535300000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD DUP3 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x3D7 DUP2 DUP6 PUSH2 0x428 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477 JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x415 DUP2 DUP5 PUSH2 0x3C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP3 PUSH2 0x46D JUMP JUMPDEST SWAP2 POP PUSH2 0x44F DUP4 PUSH2 0x46D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x4AA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x495 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xE5 0xC8 DUP12 PUSH7 0xE2F1CF20F5A23F 0xB2 0x24 SUB PUSH31 0xB08C1F660DE85E091D7C82FEC89B439D64736F6C6343000807003300000000 ",
							"sourceMap": "63:785:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;455:390;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;289:158;;;:::i;:::-;;455:390;499:13;559:1;528:8;:20;537:10;528:20;;;;;;;;;;;;;;;:27;;;;:32;524:80;;;577:15;;;;;;;;;;;;;;;;;;;;;524:80;614:18;635:8;:20;644:10;635:20;;;;;;;;;;;;;;;686:1;656:8;:20;665:10;656:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;635:53;;;;;;;;:::i;:::-;;;;;;;;;614:74;;;;;;;;;;;;;;;;;;;706:8;:20;715:10;706:20;;;;;;;;;;;;;;;757:1;727:8;:20;736:10;727:20;;;;;;;;;;;;;;;:27;;;;:31;;;;:::i;:::-;706:53;;;;;;;;:::i;:::-;;;;;;;;;;699:60;;;;;;;;778:10;770:28;;:40;799:5;:10;;;770:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:16;;;;;;;;;;;;;;;;;;;;455:390;;:::o;289:158::-;335:8;:20;344:10;335:20;;;;;;;;;;;;;;;375:16;;;;;;;;381:9;375:16;;;335:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;413:6;;;;;;;;;;;:15;;:26;429:9;413:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:158::o;7:364:1:-;95:3;123:39;156:5;123:39;:::i;:::-;178:71;242:6;237:3;178:71;:::i;:::-;171:78;;258:52;303:6;298:3;291:4;284:5;280:16;258:52;:::i;:::-;335:29;357:6;335:29;:::i;:::-;330:3;326:39;319:46;;99:272;7:364;;;;:::o;377:313::-;490:4;528:2;517:9;513:18;505:26;;577:9;571:4;567:20;563:1;552:9;548:17;541:47;605:78;678:4;669:6;605:78;:::i;:::-;597:86;;377:313;;;;:::o;696:99::-;748:6;782:5;776:12;766:22;;696:99;;;:::o;801:169::-;885:11;919:6;914:3;907:19;959:4;954:3;950:14;935:29;;801:169;;;;:::o;976:191::-;1016:4;1036:20;1054:1;1036:20;:::i;:::-;1031:25;;1070:20;1088:1;1070:20;:::i;:::-;1065:25;;1109:1;1106;1103:8;1100:34;;;1114:18;;:::i;:::-;1100:34;1159:1;1156;1152:9;1144:17;;976:191;;;;:::o;1173:77::-;1210:7;1239:5;1228:16;;1173:77;;;:::o;1256:307::-;1324:1;1334:113;1348:6;1345:1;1342:13;1334:113;;;1433:1;1428:3;1424:11;1418:18;1414:1;1409:3;1405:11;1398:39;1370:2;1367:1;1363:10;1358:15;;1334:113;;;1465:6;1462:1;1459:13;1456:101;;;1545:1;1536:6;1531:3;1527:16;1520:27;1456:101;1305:258;1256:307;;;:::o;1569:180::-;1617:77;1614:1;1607:88;1714:4;1711:1;1704:15;1738:4;1735:1;1728:15;1755:180;1803:77;1800:1;1793:88;1900:4;1897:1;1890:15;1924:4;1921:1;1914:15;1941:102;1982:6;2033:2;2029:7;2024:2;2017:5;2013:14;2009:28;1999:38;;1941:102;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "271800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyToken()": "infinite",
								"sellToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 266,
									"end": 273,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 257,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 273,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 77,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 305,
									"end": 384,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 267,
									"end": 386,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 267,
									"end": 386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 425,
									"end": 426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 521,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 505,
									"end": 511,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 494,
									"end": 503,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 490,
									"end": 512,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 450,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 450,
									"end": 522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 440,
									"end": 522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 172,
									"end": 539,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 671,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 730,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 773,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 802,
									"end": 856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 791,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 736,
									"end": 862,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 991,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1101,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1221,
									"end": 1226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1195,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1228,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1239,
									"end": 1240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1244,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1252,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 848,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053e5c88b66e2f1cf20f5a23fb224037eb08c1f660de85e091d7c82fec89b439d64736f6c63430008070033",
									".code": [
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "9769F0B0"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "A4821719"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 559,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 547,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 528,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 524,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 524,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 524,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "4641494C45440000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 524,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 654,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 635,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 635,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 686,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 656,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 656,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 656,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 656,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 656,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 656,
											"end": 687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 656,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 656,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 635,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 614,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 727,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 727,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 727,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 727,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 727,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 727,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 727,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 727,
											"end": 758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 727,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 699,
											"end": 759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 699,
											"end": 759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 759,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 699,
											"end": 759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 699,
											"end": 759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 788,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 770,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 799,
											"end": 809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 821,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "5355434345535300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 821,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 354,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 390,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 413,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 429,
											"end": 438,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 98,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 156,
											"end": 161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 123,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 242,
											"end": 248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 178,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 178,
											"end": 249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 178,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 178,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 249,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 171,
											"end": 249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 291,
											"end": 295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 289,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 280,
											"end": 296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 258,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 258,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 258,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 357,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 335,
											"end": 364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 335,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 335,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 326,
											"end": 365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 319,
											"end": 365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 377,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 505,
											"end": 531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 577,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 548,
											"end": 565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 541,
											"end": 588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 605,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 675,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 605,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 605,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 605,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 795,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 696,
											"end": 795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 801,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 801,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 907,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 959,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 950,
											"end": 964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 935,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 935,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1111,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1100,
											"end": 1134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1134,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1100,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1167,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1173,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1173,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1250,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1355,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1334,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1472,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1456,
											"end": 1557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1456,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1569,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1694,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1711,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1935,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1755,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1897,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1941,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2035,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2029,
											"end": 2036,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2017,
											"end": 2022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2043,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyToken()": "a4821719",
							"sellToken()": "9769f0b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellToken\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens.sol\":\"Tokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens.sol\":{\"keccak256\":\"0x88f1034d90a92eea94a8ac4f144454784cbf9a53b4e17e8319fd954da5c04206\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a21283bfc84a9b9ac9a3b851f095cc5baa32e2c1c0cd15d90dd938500f4a2491\",\"dweb:/ipfs/QmdqH74eAoGDCkSUHrzkBpU5tbJjCczEZYVkqnFekJabso\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/tokens.sol": {
				"ast": {
					"absolutePath": "contracts/tokens.sol",
					"exportedSymbols": {
						"Tokens": [
							104
						]
					},
					"id": 105,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "Tokens",
							"nameLocation": "72:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Tokens.Token",
									"id": 4,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "cost",
											"nameLocation": "115:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 4,
											"src": "110:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "110:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "93:5:0",
									"nodeType": "StructDefinition",
									"scope": 104,
									"src": "86:41:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "163:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "135:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct Tokens.Token[])"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "143:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "135:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct Tokens.Token[])"
										},
										"valueType": {
											"baseType": {
												"id": 7,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 6,
													"name": "Token",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 4,
													"src": "154:5:0"
												},
												"referencedDeclaration": 4,
												"src": "154:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Token_$4_storage_ptr",
													"typeString": "struct Tokens.Token"
												}
											},
											"id": 8,
											"nodeType": "ArrayTypeName",
											"src": "154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr",
												"typeString": "struct Tokens.Token[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "wallet",
									"nameLocation": "194:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "178:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "178:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "246:35:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "257:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "257:16:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "237:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "221:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:25:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:0"
									},
									"scope": 104,
									"src": "209:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "324:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 31,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "381:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "381:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 30,
																"name": "Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Token_$4_storage_ptr_$",
																	"typeString": "type(struct Tokens.Token storage pointer)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "375:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																"typeString": "struct Tokens.Token memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																"typeString": "struct Tokens.Token memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 25,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "335:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 28,
															"indexExpression": {
																"expression": {
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "335:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr_$_t_struct$_Token_$4_storage_$returns$__$bound_to$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Tokens.Token storage ref[] storage pointer,struct Tokens.Token storage ref)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "335:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "335:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 39,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "429:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "429:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 36,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "413:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "413:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "413:26:0"
											}
										]
									},
									"functionSelector": "a4821719",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "298:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 104,
									"src": "289:158:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "513:332:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 49,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "528:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 52,
															"indexExpression": {
																"expression": {
																	"id": 50,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "537:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "537:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "528:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "528:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "559:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "528:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "IfStatement",
												"src": "524:80:0",
												"trueBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "562:42:0",
													"statements": [
														{
															"expression": {
																"hexValue": "4641494c4544",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "584:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c50cad6f8b1c8a54a5c76e3eca57f2748d547818bfac18403e7911bf23fc8166",
																	"typeString": "literal_string \"FAILED\""
																},
																"value": "FAILED"
															},
															"functionReturnParameters": 48,
															"id": 57,
															"nodeType": "Return",
															"src": "577:15:0"
														}
													]
												}
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "627:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "614:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
															"typeString": "struct Tokens.Token"
														},
														"typeName": {
															"id": 61,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 60,
																"name": "Token",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4,
																"src": "614:5:0"
															},
															"referencedDeclaration": 4,
															"src": "614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$4_storage_ptr",
																"typeString": "struct Tokens.Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 75,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 63,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "635:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
															}
														},
														"id": 66,
														"indexExpression": {
															"expression": {
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "644:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "644:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "635:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
															"typeString": "struct Tokens.Token storage ref[] storage ref"
														}
													},
													"id": 74,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 67,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "656:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																	}
																},
																"id": 70,
																"indexExpression": {
																	"expression": {
																		"id": 68,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "665:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "665:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "656:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																	"typeString": "struct Tokens.Token storage ref[] storage ref"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "656:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "686:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "656:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "635:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Token_$4_storage",
														"typeString": "struct Tokens.Token storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "614:74:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "699:60:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 76,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "706:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																}
															},
															"id": 79,
															"indexExpression": {
																"expression": {
																	"id": 77,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "715:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "715:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "706:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																"typeString": "struct Tokens.Token storage ref[] storage ref"
															}
														},
														"id": 87,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 80,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "727:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Token_$4_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct Tokens.Token storage ref[] storage ref)"
																		}
																	},
																	"id": 83,
																	"indexExpression": {
																		"expression": {
																			"id": 81,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "736:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "736:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "727:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_$4_storage_$dyn_storage",
																		"typeString": "struct Tokens.Token storage ref[] storage ref"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "727:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "757:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "727:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "706:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$4_storage",
															"typeString": "struct Tokens.Token storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "699:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 96,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "799:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_$4_memory_ptr",
																	"typeString": "struct Tokens.Token memory"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "cost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "799:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 92,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "778:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "778:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "770:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 90,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "770:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "770:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "770:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "770:40:0"
											},
											{
												"expression": {
													"hexValue": "53554343455353",
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "828:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
														"typeString": "literal_string \"SUCCESS\""
													},
													"value": "SUCCESS"
												},
												"functionReturnParameters": 48,
												"id": 101,
												"nodeType": "Return",
												"src": "821:16:0"
											}
										]
									},
									"functionSelector": "9769f0b0",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellToken",
									"nameLocation": "464:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "499:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 46,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "499:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:15:0"
									},
									"scope": 104,
									"src": "455:390:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 105,
							"src": "63:785:0",
							"usedErrors": []
						}
					],
					"src": "37:811:0"
				},
				"id": 0
			}
		}
	}
}